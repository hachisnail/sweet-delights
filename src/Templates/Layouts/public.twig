<!DOCTYPE html>
<html lang="en" class="snap-y snap-mandatory">
<head>
  <meta charset="UTF-8">
  <title>{{ title|default('FlourEver') }}</title>
  <link rel="icon" type="image/png" href="/Assets/favicon.png">
  {# <link rel="stylesheet" href="/css/globals.css"> #}
  <link href="/css/output.css" rel="stylesheet">

</head>
<body class="bg-pink-50 text-gray-900 relative ">


  {% if not hideHeader %}
    {% include 'Components/header.twig' %}
  {% endif %}

  <main class="flex flex-col">
    {% block content %}{% endblock %}
  </main>

  {% include 'Components/footer.twig' %}
  {% include 'Components/sidebar-favourite.twig' %} {% include 'Components/sidebar-cart.twig' %}
  {% include 'Components/modal.twig' %}

  <div id="overlay" class="hidden fixed inset-0 bg-black/40 backdrop-blur-sm transition-opacity z-40"></div>

<script src="/js/modal.js"></script>

<script>
  // This patches pushState to fire a custom event we can listen for
  (function(history) {
    const pushState = history.pushState;
    history.pushState = function() {
      const result = pushState.apply(this, arguments);
      window.dispatchEvent(new Event('pushstate')); 
      return result;
    };

    const replaceState = history.replaceState;
    history.replaceState = function() {
      const result = replaceState.apply(this, arguments);
      window.dispatchEvent(new Event('replacestate'));
      return result;
    };
  })(window.history);
</script>

<script>
  document.addEventListener("DOMContentLoaded", () => {
  
    // --- 1. GET ALL ELEMENTS ---
    const favouriteBtn = document.getElementById("favouriteBtn"); 
    const cartBtn = document.getElementById("cartBtn");
    const favouriteSidebar = document.getElementById("favouriteSidebar"); 
    const cartSidebar = document.getElementById("cartSidebar");
    const overlay = document.getElementById("overlay");
    
    const favouriteCountEl = document.getElementById("favouriteCount"); 
    const cartCountEl = document.getElementById("cartCount");
    
    const cartItemsContainer = document.getElementById("cartItems");
    const favouriteItemsContainer = document.getElementById("favouriteItems"); 
    const cartTotalEl = document.getElementById("cartTotal");

    const userMenuBtn = document.getElementById("userMenuBtn");
    const userDropdown = document.getElementById("userDropdown");

    // --- 2. DEFINE ALL FUNCTIONS ---
    
    function closeAllSidebars() {
      favouriteSidebar?.classList.add("translate-x-full"); 
      cartSidebar?.classList.add("translate-x-full");
      userDropdown?.classList.add("hidden");
      overlay?.classList.add("hidden");
    }

    function updateCounts() {
      const favourite = JSON.parse(localStorage.getItem("favourite") || "[]"); 
      const cart = JSON.parse(localStorage.getItem("cart") || "[]");
      if (favouriteCountEl) { 
        favouriteCountEl.textContent = favourite.length || ""; 
        favouriteCountEl.style.display = favourite.length ? "inline" : "none"; 
      }
      if (cartCountEl) {
        cartCountEl.textContent = cart.length || "";
        cartCountEl.style.display = cart.length ? "inline" : "none";
      }
    }

    function renderCart() {
      const cart = JSON.parse(localStorage.getItem("cart") || "[]");
      if (!cartItemsContainer) return; 
      cartItemsContainer.innerHTML = "";

      if (cart.length === 0) {
        cartItemsContainer.innerHTML = `<p class="text-gray-500">Your cart is empty.</p>`;
        if (cartTotalEl) cartTotalEl.textContent = `Total: ₱0.00`; 
        return;
      }

      let total = 0;
      cart.forEach((item, index) => {
        total += parseFloat(item.price) * item.quantity;
        const a = document.createElement("a");
        a.className = "flex gap-3 items-center border-b pb-3 mb-3 group";
        a.href = `/products/${item.id}`;
        a.innerHTML = `
          <img src="${item.image}" alt="${item.name}" class="w-16 h-16 object-cover rounded-lg shadow-sm shadow-gray-400">
          <div class="flex-1 flex flex-col">
            <p class="font-semibold text-[#835234] group-hover:underline">${item.name}</p>
            <p class="text-sm text-gray-500">₱${item.price} × <span class="cartQty font-medium">${item.quantity}</span></p>
          </div>
          <div class="flex flex-col items-end gap-2">
            <button class="removeItem text-red-500 hover:text-red-700 font-bold cursor-pointer"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-trash-icon lucide-trash"><path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6"/><path d="M3 6h18"/><path d="M8 6V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"/></svg></button>
            <div class="flex gap-1">
              <button class="decreaseQty h-7 w-7 flex itemms-center justify-center text-[#835234] bg-[#f3d9d1] rounded hover:bg-[#eac0b0]">−</button>
              <button class="increaseQty h-7 w-7 flex itemms-center justify-center text-[#835234] bg-[#f3d9d1] rounded hover:bg-[#eac0b0]">+</button>
            </div>
          </div>
        `;
        
        a.querySelector(".removeItem").addEventListener("click", (e) => {
          e.preventDefault(); e.stopPropagation();
          cart.splice(index, 1);
          localStorage.setItem("cart", JSON.stringify(cart));
          renderCart();
          window.updateCartAndFavouriteCounts?.(); 
        });

        a.querySelector(".decreaseQty").addEventListener("click", (e) => {
          e.preventDefault(); e.stopPropagation();
          if (item.quantity > 1) {
            item.quantity--;
            localStorage.setItem("cart", JSON.stringify(cart));
            renderCart();
            window.updateCartAndFavouriteCounts?.(); 
          }
        });

        a.querySelector(".increaseQty").addEventListener("click", (e) => {
          e.preventDefault(); e.stopPropagation();
          if (item.quantity < item.stock) {
            item.quantity++;
            localStorage.setItem("cart", JSON.stringify(cart));
            renderCart();
            window.updateCartAndFavouriteCounts?.(); 
          } else if (window.showModal) {
            window.showModal({ type: "warning", title: "Stock Limit Reached", message: `Cannot add more than ${item.stock} of ${item.name}.`, buttons: [{ text: "OK", variant: "cancel" }] });
          }
        });
        cartItemsContainer.appendChild(a);
      });
      if (cartTotalEl) cartTotalEl.textContent = `Total: ₱${total.toFixed(2)}`; 
    }

    function renderFavourite() { 
      const favourite = JSON.parse(localStorage.getItem("favourite") || "[]"); 
      if (!favouriteItemsContainer) return; 
      favouriteItemsContainer.innerHTML = ""; 

      if (favourite.length === 0) { 
        favouriteItemsContainer.innerHTML = `<p class="text-gray-500">No favourites yet.</p>`; 
        return;
      }

      favourite.forEach((item, index) => { 
        const a = document.createElement("a");
        a.href = `/products/${item.id}`; 
        a.className = "flex items-center gap-3 border-b pb-2 mb-2 group";
        a.innerHTML = `
          <img src="${item.image}" alt="${item.name}" class="w-12 h-12 object-cover shadow-sm shadow-gray-400 rounded-lg">
          <div class="flex-1">
            <p class="font-semibold text-[#835234] group-hover:underline">${item.name}</p>
            <p class="text-sm text-gray-500">₱${item.price}</p>
          </div>
          <button class="text-red-500 hover:text-red-700 font-bold cursor-pointer relative z-10"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-trash-icon lucide-trash"><path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6"/><path d="M3 6h18"/><path d="M8 6V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"/></svg></button>
        `;

        a.querySelector("button").addEventListener("click", (e) => {
          e.preventDefault(); e.stopPropagation();
          favourite.splice(index, 1); 
          localStorage.setItem("favourite", JSON.stringify(favourite)); 
          renderFavourite(); 
          window.updateCartAndFavouriteCounts?.(); 
          window.dispatchEvent(new Event("favouritesChanged"));
        });
        favouriteItemsContainer.appendChild(a); 
      });
    }


    // --- 3. ASSIGN GLOBALS (for other scripts) ---
    window.updateCartAndFavouriteCounts = updateCounts;
    window.renderCart = renderCart;
    window.renderFavourite = renderFavourite;

    // --- 4. BIND EVENT LISTENERS ---
    
    // Helper to toggle a single sidebar
    function toggleSidebar(btn, sidebar, e) {
        e.stopPropagation();
        const isOpen = !sidebar.classList.contains("translate-x-full");
        closeAllSidebars();
        if (!isOpen) {
            sidebar?.classList.remove("translate-x-full");
            overlay?.classList.remove("hidden");
        }
    }
    
    // Helper to toggle a dropdown
    function toggleDropdown(btn, dropdown, e) {
        e.stopPropagation();
        const isOpen = !dropdown.classList.contains("hidden");
        closeAllSidebars(); // This also closes other dropdowns
        if (!isOpen) {
            dropdown?.classList.remove("hidden");
        }
    }

    favouriteBtn?.addEventListener("click", (e) => toggleSidebar(favouriteBtn, favouriteSidebar, e));
    cartBtn?.addEventListener("click", (e) => toggleSidebar(cartBtn, cartSidebar, e));
    userMenuBtn?.addEventListener("click", (e) => toggleDropdown(userMenuBtn, userDropdown, e));
    overlay?.addEventListener("click", closeAllSidebars);

    // Close dropdown when clicking outside
    window.addEventListener("click", (e) => {
      if (userDropdown && !userDropdown.classList.contains("hidden")) {
        if (!userMenuBtn.contains(e.target) && !userDropdown.contains(e.target)) {
          userDropdown.classList.add("hidden");
        }
      }
    });

    // --- 5. RUN ON INITIAL PAGE LOAD ---
    updateCounts();
    renderCart();
    renderFavourite();

    // --- 6. SET UP NAVIGATION LISTENER ---
    function handleNavigation() {
      updateCounts();
      renderCart();
      renderFavourite();
      closeAllSidebars(); 
    }

    window.addEventListener('popstate', handleNavigation);
    window.addEventListener('pushstate', handleNavigation);
    window.addEventListener('replacestate', handleNavigation);
  });
</script>
</body>
</html>